#'   ylim = c(400,900))
#'
#'
#' ## 1-way ANOVA
#'
#' ### null model
#' model.null <- lm(mass ~ 1, data = antlers)
#'
#' ### model of interest
#' model.alt <- lm(mass ~ diet, data = antlers)
#'
#' ### compare models
#' anova(model.null, model.alt)
#'
#' ## Pairwise comparisons after 1-way ANOVA
#' ### no corrections for multiple comparisons
#' pairwise.t.test(x = antlers$mass, g = antlers$diet,
#'       p.adjust.method = "none")
#'
#' ### Bonferonni correction
#' pairwise.t.test(x = antlers$mass, g = antlers$diet,
#'       p.adjust.method = "bonferroni")
#'
#' ## Tukey test
#'
#' ### re-fit model with aov()
#' model.alt.aov <- aov(mass ~ diet, data = antlers)
#'
#' ### TukeyHSD() on model from aov()
#' TukeyHSD(model.alt.aov)
#'
#' ### Plot effect sizes
#' # plotTukeysHSD(TukeyHSD(model.alt.aov))
#' }
"antlers"
ggplot2::qplot(data = dat,
y = length,
x = group,
geom = "boxplot")
control <-   c(4,  5,6,3,3)
treatment <- c(11,12,6,4,7)
mean(control)
sd(control)
summary(control)
dat <- data.frame(length = c(4,  5,6,3,3,
11,12,6,4,7),
group = c("C","C","C","C","C",
"T","T","T","T","T"))
dat <- data.frame(length = c(control,
treatment),
group = c("C","C","C","C","C",
"T","T","T","T","T"))
library(ggplot2)
library(ggpubr)
ggpubr::ggboxplot(data = dat,
y = "length",
x = "group")
ggpubr::gghistogram(data = dat,
x = "length",
facet.by = "group")
ggpubr::ggdensity(data = dat,
x = "length",
facet.by = "group",
fill = "group")
dat <- data.frame(length = c(control,
treatment),
group = c(rep("C",5),
rep("T",5)))
boxplot(length ~ group, data = dat)
ggplot2::qplot(data = dat,
y = length,
x = group,
geom = "boxplot")
library(compbio4all)
library(compbio4all)
library(compbio4all)
pkgdown::clean_site (pkg = ".")
pkgdown::build_home(pkg = ".")
pkgdown::build_articles(pkg = ".")
pkgdown::build_news()
pkgdown::build_reference(pkg = ".")
library(compbio4all)
library(compbio4all)
ggline(data = YNP_north_elk,
y = "N.elk",
x = "year",
color = "black",
point.color = "red",
linetype = "solid",
plot_type = "b",
size = 1.5,
point.size = 4,
shape = 16,
xlab = "days",
ylab = "Adult bears (N)",
title = "Estimated adult Grizzly Bear population of\n Yellowstone National Park, 1983-2016") +
geom_smooth(method = "gam",se = F,
fullrange = T) +
geom_hline(yintercept = 17500, linetype = 2) +
geom_segment(aes(x = 1988, xend = 1988, y = 4000, yend = 0),
col = "red",
size = 3,
arrow = arrow()) +
geom_segment(aes(x = 1995, xend = 1995, y = 4000, yend = 0),
col = "darkgrey",
size = 3,
arrow = arrow()) +
annotate("text",label = "Fire",
x = 1988, y = 5000) +
annotate("text",label = "Wolves",
x = 1996, y = 5000) +
annotate("text",label = "Bear Carrying Capacity (K)?",
x = 1985, y = 17500)
elk <- c(9609,10469,NA,NA,6380,
6534,6534,4272, 4355, 5593,7326,
8290,10135,10739,12754,
12354,
13047, 12941,
11149,
NA,NA,
16363,
NA,
NA,
NA,
16742,17901,19272,
17023,
15644,
12335,
15587,
18066,
19299,
17290,
15397,
14246,
12025,
12075,
14682,
13673,
11969,
9215,
8335)
year <- 1960:2003
length(elk)
length(year)
plot(elk ~ year, type = "b")
ggline(data = elk,
y = "N.elk",
x = "year",
color = "black",
point.color = "red",
linetype = "solid",
plot_type = "b",
size = 1.5,
point.size = 4,
shape = 16,
xlab = "days",
ylab = "Adult bears (N)",
title = "Estimated adult Grizzly Bear population of\n Yellowstone National Park, 1983-2016") +
geom_smooth(method = "gam",se = F,
fullrange = T) +
geom_hline(yintercept = 17500, linetype = 2) +
geom_segment(aes(x = 1988, xend = 1988, y = 4000, yend = 0),
col = "red",
size = 3,
arrow = arrow()) +
geom_segment(aes(x = 1995, xend = 1995, y = 4000, yend = 0),
col = "darkgrey",
size = 3,
arrow = arrow()) +
annotate("text",label = "Fire",
x = 1988, y = 5000) +
annotate("text",label = "Wolves",
x = 1996, y = 5000) +
annotate("text",label = "Bear Carrying Capacity (K)?",
x = 1985, y = 17500)
ggline(data = elk,
y = "N.elk",
x = "year",
color = "black",
point.color = "red",
linetype = "solid",
plot_type = "b",
size = 1.5,
point.size = 4,
shape = 16,
xlab = "days",
ylab = "Adult bears (N)",
title = "Estimated adult Grizzly Bear population of\n Yellowstone National Park, 1983-2016")
elk
library(compbio4all)
library(compbio4all)
getwd()
library(compbio4all)
library(compbio4all)
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, message = FALSE, warning = FALSE,fig.width = 3)
#[independent samples; 2 sample t-test]
#[extension Hsp ~ hsp regression]
# Make the data
## Means Similar to Zhang et al 2015 AoB
means <- c(1, 2.5)
SD <- 1
n <- 3
## label vector of means
names(means) <- c("control","acclim")
# create treatment labels
trt.labels <- c(rep("control",n),
rep("acclim",n))
#turn into datafrmae
trt.labels <- data.frame(treatment = trt.labels)
#reorder treatment factors
trt.labels$treatment <- factor(trt.labels$treatment,
levels = c("control","acclim"))
#determine number of factor levels
levs <- length(levels(trt.labels$treatment))
#calcualte total sample size
tot.n <- n*levs
#build model matrix
mm <- model.matrix(~-1 + treatment, trt.labels)
#simulate data
## set seed
set.seed(123)
## make dataframe
x <- mm %*% means + rnorm(n = tot.n,mean = 0,sd = SD)
# finalize dataframe
dat.expt1 <- cbind(Hsp.express = x,
trt.labels)
#save data
write.csv(dat.expt1, file = "experiment1.csv")
library(pander)
pander(dat.expt1,
caption = "Experiment 1 data")
library(ggplot2); library(cowplot)
ggplot(data = dat.expt1,
aes(y = Hsp.express,
x = treatment)) +
stat_summary(fun.data = "mean_se",
fun.args = list(mult = 1.96)) +
annotate(geom = "text",x = 1,y = 3.75,
label ="Error bars = 95% CI") +
ggtitle("Experiment 1 means")
devtools::use_package("iNEXT", "Suggests")
usethis::use_package("iNEXT", "Suggests")
usethis::use_package("ape", "Suggests")
usethis::use_package("phangorn", "Suggests")
library(compbio4all)
library(compbio4all)
here::here("data-raw","martin_1995_life_history.csv")
file. <- here::here("data-raw","martin_1995_life_history.csv")
read.csv(file = file., skip = 1)
martin_1995_life_history <- read.csv(file = file., skip = 1)
martin_1995_life_history
usethis::use_data(martin_1995_life_history, overwrite = TRUE)
file. <- here::here("data-raw","martin1995_life_history.csv")
martin1995 <- read.csv(file = file., skip = 1)
usethis::use_data(martin1995, overwrite = TRUE)
martin1995
make_dateset_helpfile
make_dateset_helpfile(dataset = martin1995,
dataset_name = "martin1995")
library(compbio4all)
library(compbio4all)
library(compbio4all)
data("martin1995")
plot(surv.adult ~ clutch.sz, data = martin1995)
hist(martin1995$surv.adult)
names(martin1995)
martin1995$surv.adult
summary(martin1995)
file. <- here::here("data-raw","martin1995_life_history.csv")
martin1995 <- read.csv(file = file., skip = 1)
usethis::use_data(martin1995, overwrite = TRUE)
library(compbio4all)
knitr::opts_chunk$set(echo = TRUE)
data(martin1995)
file. <- here::here("data-raw","robinson_aafreq.csv")
robinson_aafreq <- read.csv(file = file., skip = 0)
robinson_aafreq
make_dateset_helpfile(dataset = robinson_aafreq,
dataset_name = "robinson_aafreq")
library(compbio4all)
data(robinson_aafreq)
robinson_aafreq
make_dateset_helpfile(dataset = robinson_aafreq,
dataset_name = "robinson_aafreq")
data(robinson_aafreq)
r_molec_seq_vs1(units = robinson_aafreq$aa1,
prob = robinson_aafreq$aa.freq,
length = 10)
data(robinson_aafreq)
library(compbio4all)
usethis::use_data(robinson_aafreq, overwrite = TRUE)
library(compbio4all)
library(compbio4all)
library(compbio4all)
install.packages("gplots")
usethis::use_package("gplots", "Suggests")
library(compbio4all)
library(compbio4all)
library(compbio4all)
library(compbio4all)
library(compbio4all)
library(devtools)
library(usethis)
library(here)
usethis::create_package(path = getwd())
0
usethis::create_package(path = getwd())
library(compbio4all)
library(compbio4all)
library(compbio4all)
file. <- here::here("data-raw","make_virus_mutation_rates.csv")
virus_mutation_rates <- read.csv(file = file.,
skip = 1)
usethis::use_data(virus_mutation_rates, overwrite = TRUE)
make_dateset_helpfile(dataset = virus_mutation_rates,
dataset_name = "virus_mutation_rates")
compbio4all::make_dateset_helpfile(dataset = virus_mutation_rates,
dataset_name = "virus_mutation_rates")
virus_mutation_rates
file. <- here::here("data-raw","make_virus_mutation_rates.csv")
virus_mutation_rates <- read.csv(file = file.,
skip = 1)
usethis::use_data(virus_mutation_rates, overwrite = TRUE)
#usethis::use_r("martin1995")
compbio4all::make_dateset_helpfile(dataset = virus_mutation_rates,
dataset_name = "virus_mutation_rates")
virus_mutation_rates
virus_mutation_rates <- read.csv(file = file.,
skip = 1,
na.strings = "-")
usethis::use_data(virus_mutation_rates, overwrite = TRUE)
virus_mutation_rates
usethis::use_data(virus_mutation_rates, overwrite = TRUE)
virus_mutation_rates
plot(log(mutation_rate) ~ log(genome_size_kb),
data = virus_mutation_rates)
virus_mutation_rates
summary(virus_mutation_rates)
virus_mutation_rates$mutation_rate
virus_mutation_rates$mutation_rate <- gsub("E","e",
virus_mutation_rates$mutation_rate)
virus_mutation_rates$mutation_rate
virus_mutation_rates$mutation_rate <- as.numeric(virus_mutation_rates$mutation_rate )
virus_mutation_rates$mutation_rate
virus_mutation_rates$mutation_rate <- gsub(" ","",virus_mutation_rates$mutation_rate )
virus_mutation_rates <- read.csv(file = file.,
skip = 1,
na.strings = "-")
virus_mutation_rates$mutation_rate <- gsub("E","e",
virus_mutation_rates$mutation_rate)
virus_mutation_rates$mutation_rate <- gsub(" ","",virus_mutation_rates$mutation_rate )
virus_mutation_rates$mutation_rate <- as.numeric(virus_mutation_rates$mutation_rate )
usethis::use_data(virus_mutation_rates, overwrite = TRUE)
summary(virus_mutation_rates$mutation_rate )
plot(log(mutation_rate) ~ log(genome_size_kb),
data = virus_mutation_rates)
file. <- here::here("data-raw","make_virus_mutation_rates_snr.csv")
virus_snr <- read.csv(file = file.,
skip = 2,
na.strings = "-")
file. <- here::here("data-raw","virus_mutation_rates_snr.csv")
virus_snr <- read.csv(file = file.,
skip = 2,
na.strings = "-")
virus_snr <- read.csv(file = file.,
skip = 2,
na.strings = "-")
virus_snr$mutation_rate <- gsub("E","e",
virus_snr$mutation_rate)
virus_snr$mutation_rate <- gsub(" ","",virus_snr$mutation_rate )
virus_snr$mutation_rate <- as.numeric(virus_snr$mutation_rate )
summary(virus_snr$mutation_rate )
virus_snr <- read.csv(file = file.,
skip = 2,
na.strings = "-")
virus_snr$mutation_rate <- gsub("E","e",
virus_snr$mutation_rate)
virus_snr$mutation_rate <- gsub(" ","",virus_snr$mutation_rate )
virus_snr$mutation_rate <- as.numeric(virus_snr$mutation_rate )
summary(virus_snr$mutation_rate )
usethis::use_data(virus_snr, overwrite = TRUE)
compbio4all::make_dateset_helpfile(dataset = virus_snr,
dataset_name = "virus_snr")
plot(log(mutation_rate) ~ log(genome_size_kb),
data = virus_snr)
library(ggpubr)
virus_snr$mutation_rate_log <- log(virus_snr$mutation_rate)
virus_snr$mutation_rate_log <- log(virus_snr$mutation_rate)
virus_snr$genome_size_kb_log <- log(virus_snr$genome_size_kb)
ggscatter(y = "mutation_rate_log",
x = "genome_size_kb",
data = genome_size_kb)
virus_snr$mutation_rate_log <- log(virus_snr$mutation_rate)
genome_size_kb$genome_size_kb_log <- log(virus_snr$genome_size_kb)
ggscatter(y = "mutation_rate_log",
x = "genome_size_kb_log",
data = genome_size_kb)
virus_snr$mutation_rate_log <- log(virus_snr$mutation_rate)
virus_snr$genome_size_kb_log <- log(virus_snr$genome_size_kb)
ggscatter(y = "mutation_rate_log",
x = "genome_size_kb_log",
data = genome_size_kb)
virus_snr$genome_size_kb)
virus_snr
virus_snr$genome_size_kb
virus_snr$genome_size_kb_log <- log(virus_snr$genome_size_kb)
ggscatter(y = "mutation_rate_log",
x = "genome_size_kb_log",
data = virus_snr)
# https://www.uv.es/rsanjuan/Viral_mutation_rates_snc.txt
# Viral mutation rates can be expressed as
## substitutions per nucleotide site per cell infection (s/n/c)
## or as substitutions per nucleotide per strand copying (s/n/r).
## snc
## Viral mutation rates expressed as nucleotide substitutions per site per cell infection (s/n/c)
## https://www.uv.es/rsanjuan/Viral_mutation_rates_snc.htm
## snr
## Viral mutation rates expressed as nucleotide substitutions per site per strand copying (s/n/r)
## https://www.uv.es/rsanjuan/Viral_mutation_rates_snr.htm
file. <- here::here("data-raw","virus_mutation_rates_snr.csv")
virus_snr <- read.csv(file = file.,
skip = 2,
na.strings = "-")
virus_snr$mutation_rate <- gsub("E","e",
virus_snr$mutation_rate)
virus_snr$mutation_rate <- gsub(" ","",virus_snr$mutation_rate )
virus_snr$mutation_rate <- as.numeric(virus_snr$mutation_rate )
summary(virus_snr$mutation_rate )
usethis::use_data(virus_snr, overwrite = TRUE)
# compbio4all::make_dateset_helpfile(dataset = virus_snr,
#                       dataset_name = "virus_snr")
library(ggpubr)
virus_snr$mutation_rate_log <- log(virus_snr$mutation_rate)
virus_snr$genome_size_kb_log <- log(virus_snr$genome_size_kb)
ggscatter(y = "mutation_rate_log",
x = "genome_size_kb_log",
data = virus_snr)
plot(log(mutation_rate) ~ log(genome_size_kb),
data = virus_snr)
ggscatter(y = "mutation_rate_log",
x = "genome_size_kb_log",
data = virus_snr)
# https://www.uv.es/rsanjuan/Viral_mutation_rates_snc.txt
# Viral mutation rates can be expressed as
## substitutions per nucleotide site per cell infection (s/n/c)
## or as substitutions per nucleotide per strand copying (s/n/r).
## snc
## Viral mutation rates expressed as nucleotide substitutions per site per cell infection (s/n/c)
## https://www.uv.es/rsanjuan/Viral_mutation_rates_snc.htm
## snr
## Viral mutation rates expressed as nucleotide substitutions per site per strand copying (s/n/r)
## https://www.uv.es/rsanjuan/Viral_mutation_rates_snr.htm
file. <- here::here("data-raw","virus_mutation_rates_snr.csv")
virus_snr <- read.csv(file = file.,
skip = 2,
na.strings = "-")
virus_snr$mutation_rate <- gsub("E","e",
virus_snr$mutation_rate)
virus_snr$mutation_rate <- gsub(" ","",virus_snr$mutation_rate )
virus_snr$mutation_rate <- as.numeric(virus_snr$mutation_rate )
summary(virus_snr$mutation_rate )
usethis::use_data(virus_snr, overwrite = TRUE)
# compbio4all::make_dateset_helpfile(dataset = virus_snr,
#                       dataset_name = "virus_snr")
library(ggpubr)
virus_snr$mutation_rate_log <- log(virus_snr$mutation_rate)
virus_snr$genome_size_kb_log <- log(virus_snr$genome_size_kb)
ggscatter(y = "mutation_rate_log",
x = "genome_size_kb_log",
data = virus_snr)
log(0.1)
virus_snr
# https://www.uv.es/rsanjuan/Viral_mutation_rates_snc.txt
# Viral mutation rates can be expressed as
## substitutions per nucleotide site per cell infection (s/n/c)
## or as substitutions per nucleotide per strand copying (s/n/r).
## snc
## Viral mutation rates expressed as nucleotide substitutions per site per cell infection (s/n/c)
## https://www.uv.es/rsanjuan/Viral_mutation_rates_snc.htm
## snr
## Viral mutation rates expressed as nucleotide substitutions per site per strand copying (s/n/r)
## https://www.uv.es/rsanjuan/Viral_mutation_rates_snr.htm
file. <- here::here("data-raw","virus_mutation_rates_snr.csv")
virus_snr <- read.csv(file = file.,
skip = 2,
na.strings = "-")
virus_snr$mutation_rate <- gsub("E","e",
virus_snr$mutation_rate)
virus_snr$mutation_rate <- gsub(" ","",virus_snr$mutation_rate )
virus_snr$mutation_rate <- as.numeric(virus_snr$mutation_rate )
summary(virus_snr$mutation_rate )
usethis::use_data(virus_snr, overwrite = TRUE)
# compbio4all::make_dateset_helpfile(dataset = virus_snr,
#                       dataset_name = "virus_snr")
library(ggpubr)
virus_snr$mutation_rate_log <- log(virus_snr$mutation_rate)
virus_snr$genome_size_kb_log <- log(virus_snr$genome_size_kb)
ggscatter(y = "mutation_rate_log",
x = "genome_size_kb_log",
data = virus_snr,
color = )
compbio4all::make_dateset_helpfile(dataset = virus_snr,
dataset_name = "virus_snr")
ggscatter(y = "mutation_rate_log",
x = "genome_size_kb_log",
data = virus_snr,
color = "group")
log
log
log(10^-9)
log(10e9)
log(10e-9)
